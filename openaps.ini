[alias]
wait-for-silence = ! bash -c "(mmeowlink-any-pump-comms.py --port /dev/spidev5.1 --wait-for 1 | grep -q comms && echo -n Radio ok, || openaps mmtune) && echo -n \" Listening: \"; for i in $(seq 1 100); do echo -n .; mmeowlink-any-pump-comms.py --port /dev/spidev5.1 --wait-for 10 2>/dev/null | egrep -v subg | egrep No && break; done"
wait-for-silence-long = ! bash -c "echo -n \"Listening: \"; for i in $(seq 1 200); do echo -n .; mmeowlink-any-pump-comms.py --port /dev/spidev5.1 --wait-for 20 2>/dev/null | egrep -v subg | egrep No && break; done"
mmtune = ! bash -c "reset_spi_serial.py 2>/dev/null; echo {} > monitor/mmtune.json; echo -n \"mmtune: \" && openaps report invoke monitor/mmtune.json 2>/dev/null >/dev/null; grep -v setFreq monitor/mmtune.json | grep -A2 $(json -a setFreq -f monitor/mmtune.json) | while read line; do echo -n \"$line \"; done"
preflight = ! bash -c "reset_spi_serial.py 2>/dev/null && openaps wait-for-silence-long && openaps report invoke monitor/mmtune.json monitor/clock.json 2>/dev/null && json -f monitor/mmtune.json -e 'this.scanDetails = this.scanDetails.filter(function (d) { return d[2] > -99 });' -0 && grep -q T monitor/clock.json && echo PREFLIGHT OK || ( echo PREFLIGHT SLEEP; sleep 30; echo PREFLIGHT FAIL; exit 1 )"
history = ! bash -c "(openaps report invoke monitor/model.json monitor/status.json monitor/pump-history.json monitor/clock-zoned.json monitor/pump-history-zoned.json nightscout/pump-history-formatted.json && test $(cat monitor/status.json | json bolusing) == false) || (echo Pump bolusing, waiting to pull history; exit 1)"
gather1 = ! bash -c "openaps report invoke monitor/reservoir.json monitor/settings.json monitor/active-basal-profile.json && grep -q rate monitor/active-basal-profile.json"
gather2 = report invoke monitor/battery.json monitor/bg-targets.json monitor/insulin-sensitivities.json monitor/carb-ratios.json monitor/temp-basal-status.json monitor/latest-treatments.json
latest-ns-treatment-time = ! bash -c "openaps use latest-treatments shell | json created_at"
format-latest-nightscout-treatments = ! bash -c "nightscout cull-latest-openaps-treatments monitor/pump-history-zoned.json monitor/model.json $(openaps latest-ns-treatment-time) > monitor/upload-treatments.json"
enact = ! bash -c "rm -vf predict/oref0.json; openaps report invoke predict/profile.json monitor/meal.json predict/iob.json predict/oref0.json && if (cat predict/oref0.json && grep -q duration predict/oref0.json); then ( rm -vf control/enacted.json && ((openaps wait-for-silence && openaps report invoke control/enacted.json) || (echo Enact failed, waiting then trying again && openaps wait-for-silence && openaps mmtune && openaps report invoke control/enacted.json)) ) && cat control/enacted.json 2>&1; else echo No action required; fi"
upload = ! bash -c "openaps format-latest-nightscout-treatments && test $(json -f monitor/upload-treatments.json -a created_at eventType | wc -l ) -gt 0 && (openaps use ns-upload shell treatments.json monitor/upload-treatments.json) || echo \"No recent treatments to upload\""
upload-fake = ! bash -c "echo skipping upload"
status-gen = report invoke monitor/edison-battery.json monitor/recent-rssi.json monitor/openaps-status.json
status-upload = ! bash -c "openaps report invoke nightscout/uploaded-openaps-status.json || echo Unable to upload status"
status-upload-old = report invoke monitor/edison-battery.json monitor/openaps-status.json nightscout/uploaded-openaps-status.json
wait-for-bg = ! bash -c "touch monitor/glucose.json; cp monitor/glucose.json monitor/last-glucose.json; while(diff -q monitor/last-glucose.json monitor/glucose.json); do echo -n .; sleep 10; openaps get-bg; done"
history-retry = ! bash -c "openaps history || (echo history failed, waiting before trying again && openaps wait-for-silence && openaps mmtune && openaps history)"
gather-and-upload = ! bash -c "openaps history-retry && openaps upload && ((openaps report invoke nightscout/temp-targets.json nightscout/carb-history.json && openaps wait-for-silence && openaps gather1 && openaps gather2) || (openaps mmtune && openaps gather1 && openaps gather2))"
enact-and-upload = ! bash -c "openaps enact && openaps status-gen && openaps status-upload"
24h-etc-fake = ! bash -c "echo skipping 24h-etc"
24h-etc = ! bash -c "(openaps report invoke nightscout/glucose-24h.json || echo not able to get 24h BG from Nighscout) && openaps wait-for-silence && openaps report invoke monitor/glucose-24h-merge.json monitor/pump-history24h.json monitor/pump-history24h-zoned.json predict/autosens.json"
wait-loop = ! bash -c "openaps preflight && openaps gather-and-upload && openaps wait-for-bg && openaps enact-and-upload && openaps 24h-etc"
loop = ! bash -c "openaps preflight && openaps gather-and-upload && openaps get-bg && openaps enact-and-upload"
retry-loop = ! bash -c "openaps wait-loop || openaps loop"
push = ! bash -c "(git push && echo 'pushed to github') || echo 'unable to push to github'"
glucose-local = ! bash -c "openaps report invoke monitor/cal.json; openaps report invoke monitor/glucose-oref0.json monitor/glucose.json"
glucose-ns = report invoke monitor/glucose-ns.json monitor/glucose-ns-raw.json
get-bg = ! bash -c "(openaps get-bg-ns || echo not able to get BG from Nightscout) && openaps get-bg-merge"
get-bg-ns-fake = ! bash -c "echo skipping ns-bg"
get-bg-ns = report invoke nightscout/glucose-recent.json nightscout/cal.json
get-bg-merge = report invoke monitor/cal-local.json monitor/cal-merge.json monitor/glucose-local.json monitor/glucose-merge.json monitor/glucose.json

[vendor "openapscontrib.timezones"]
path = .
module = openapscontrib.timezones

[vendor "mmeowlink.vendors.mmeowlink"]
path = .
module = mmeowlink.vendors.mmeowlink

[device "pump"]
vendor = mmeowlink.vendors.mmeowlink
extra = pump.ini

[device "tz"]
vendor = openapscontrib.timezones

[device "latest-treatments"]
vendor = openaps.vendors.process
extra = latest-treatments.ini

[device "ns-upload"]
vendor = openaps.vendors.process
extra = ns-upload.ini

[device "meal"]
fields = pumphistory profile clock glucose basalprofile carbhistory
cmd = oref0
args = meal
vendor = openaps.vendors.process

[device "edison-battery"]
fields = output
cmd = /home/edison/src/EdisonVoltage/voltage
vendor = openaps.vendors.process
args = 

[report "monitor/edison-battery.json"]
device = edison-battery
use = shell
reporter = JSON
output = json
remainder = batteryVoltage battery

[report "monitor/mmtune.json"]
device = pump
use = mmtune
reporter = JSON

[report "monitor/model.json"]
device = pump
use = model
reporter = JSON

[report "monitor/glucose-ns-raw.json"]
use = shell
reporter = JSON
json_default = True
cal = monitor/cal-ns.json
device = raw
remainder = 
maxraw = 250
glucose = monitor/glucose-ns.json

[report "monitor/pump-history.json"]
device = pump
hours = 6.0
use = iter_pump_hours
reporter = JSON

[report "monitor/pump-history-zoned.json"]
use = rezone
reporter = JSON
date = timestamp dateString start_at end_at created_at
adjust = missing
input = monitor/pump-history.json
device = tz
timezone = None
astimezone = True

[report "monitor/pump-history24h.json"]
device = pump
hours = 27.0
use = iter_pump_hours
reporter = JSON

[report "monitor/pump-history24h-zoned.json"]
use = rezone
reporter = JSON
date = timestamp dateString start_at end_at created_at
adjust = missing
input = monitor/pump-history24h.json
device = tz
timezone = None
astimezone = True

[report "monitor/clock.json"]
device = pump
use = read_clock
reporter = JSON

[report "monitor/clock-zoned.json"]
use = clock
reporter = JSON
astimezone = False
date = None
adjust = missing
input = monitor/clock.json
device = tz
timezone = PST

[report "monitor/temp-basal-status.json"]
device = pump
use = read_temp_basal
reporter = JSON

[report "monitor/active-basal-profile.json"]
device = pump
use = read_selected_basal_profile
reporter = JSON

[report "monitor/reservoir.json"]
device = pump
use = reservoir
reporter = JSON

[report "monitor/settings.json"]
device = pump
use = settings
reporter = JSON

[report "monitor/status.json"]
device = pump
use = read_status
reporter = JSON

[report "monitor/battery.json"]
device = pump
use = read_battery_status
reporter = JSON

[report "monitor/bg-targets.json"]
device = pump
use = read_bg_targets
reporter = JSON

[report "monitor/insulin-sensitivities.json"]
device = pump
use = read_insulin_sensitivies
reporter = JSON

[report "monitor/carb-ratios.json"]
device = pump
use = read_carb_ratios
reporter = JSON

[report "monitor/latest-treatments.json"]
device = latest-treatments
use = shell
reporter = text

[report "predict/profile.json"]
use = shell
carb-ratios = monitor/carb-ratios.json
reporter = JSON
basals = monitor/active-basal-profile.json
settings = monitor/settings.json
bg-targets = monitor/bg-targets.json
device = get-profile
isf = monitor/insulin-sensitivities.json
prefs = prefs.json
temptargets = nightscout/temp-targets.json
model = --model monitor/model.json
json_default = True
remainder = --model monitor/model.json

[report "predict/iob.json"]
profile = predict/profile.json
use = shell
clock = monitor/clock-zoned.json
reporter = text
device = calculate-iob
history = monitor/pump-history-zoned.json

[report "predict/oref0.json"]
profile = predict/profile.json
use = shell
reporter = JSON
current-temps = monitor/temp-basal-status.json
device = determine-basal
iob = predict/iob.json
glucose = monitor/glucose.json
autosens = --auto-sens predict/autosens.json --missing-auto-sens-ok
meal = --meal monitor/meal.json --missing-auto-sens-ok
json_default = True
remainder = --meal monitor/meal.json --missing-meal-ok --auto-sens predict/autosens.json --missing-auto-sens-ok

[report "predict/autosens.json"]
profile = predict/profile.json
use = shell
reporter = JSON
basal_profile = monitor/active-basal-profile.json
json_default = True
pumphistory = monitor/pump-history24h-zoned.json
device = detect-sensitivity
remainder = 
isf = monitor/insulin-sensitivities.json
glucose = monitor/glucose-24h-merge.json

[report "control/enacted.json"]
device = pump
input = predict/oref0.json
use = set_temp_basal
reporter = JSON

[report "control/ninja-enacted.json"]
device = pump
input = control/ninja-says.json
use = set_temp_basal
reporter = JSON

[report "monitor/meal.json"]
profile = predict/profile.json
use = shell
reporter = JSON
clock = monitor/clock-zoned.json
json_default = True
pumphistory = monitor/carbhistory-local.json
carbhistory = nightscout/carb-history.json
glucose = monitor/glucose.json
basalprofile = monitor/active-basal-profile.json
device = meal
remainder = 

[report "monitor/carb_ratios.json"]
device = pump
use = read_carb_ratios
reporter = JSON

[vendor "openxshareble"]
path = .
module = openxshareble

[device "cgm"]
vendor = openxshareble
extra = cgm.ini

[report "monitor/glucose-oref0.json"]
device = cgm
threshold = 100
use = oref0_glucose
hours = 8.5
reporter = JSON

[report "monitor/cal.json"]
device = cgm
count = 1
use = iter_calibrations
reporter = JSON

[report "monitor/glucose-old.json"]
use = shell
reporter = JSON
json_default = True
cal = monitor/cal.json
device = raw
remainder = 
maxraw = 250
glucose = monitor/glucose-oref0.json

[report "monitor/glucose.json"]
device = raw
use = shell
remainder = 
reporter = JSON
json_default = True
cal = monitor/cal-merge.json
maxraw = 250
glucose = monitor/glucose-merge.json

[device "ns"]
vendor = openaps.vendors.process
extra = ns.ini

[device "oref0"]
vendor = openaps.vendors.process
extra = oref0.ini

[device "raw"]
vendor = openaps.vendors.process
extra = raw.ini

[device "merge"]
vendor = openaps.vendors.process
extra = merge.ini

[report "monitor/glucose-local.json"]
device = oref0
remainder = copy-fresher /home/indy/cgm-loop/monitor/glucose-zoned.json
use = shell
json_default = True
reporter = text

[report "nightscout/glucose-recent.json"]
oper = oref0_glucose_since
use = shell
reporter = JSON
json_default = True
device = ns
remainder = -6hours tz

[report "nightscout/glucose-24h.json"]
oper = oref0_glucose_since
use = shell
reporter = JSON
json_default = True
device = ns
remainder = -24hours tz

[report "monitor/glucose-merge.json"]
use = shell
short = monitor/glucose-local.json
reporter = JSON
json_default = True
long = nightscout/glucose-recent.json
device = merge
remainder = 

[report "nightscout/cal.json"]
oper = get
use = shell
reporter = JSON
json_default = True
device = ns
remainder = entries/cal.json count=1

[report "monitor/cal-local.json"]
device = oref0
remainder = copy-fresher /home/indy/cgm-loop/monitor/cal-zoned.json
use = shell
json_default = True
reporter = text

[report "monitor/cal-merge.json"]
use = shell
short = monitor/cal-local.json
reporter = JSON
json_default = True
long = nightscout/cal.json
device = merge
remainder = 

[device "ns-status"]
vendor = openaps.vendors.process
extra = ns-status.ini

[report "monitor/openaps-status.json"]
device = ns-status
remainder = monitor/clock-zoned.json predict/iob.json predict/oref0.json control/enacted.json monitor/battery.json monitor/reservoir.json monitor/status.json monitor/recent-rssi.json --uploader monitor/edison-battery.json
use = shell
json_default = True
reporter = JSON

[report "nightscout/uploaded-openaps-status.json"]
oper = upload
use = shell
reporter = JSON
json_default = True
device = ns
remainder = devicestatus.json monitor/openaps-status.json

[report "nightscout/temp-targets.json"]
oper = temp_targets
use = shell
reporter = JSON
json_default = True
device = ns
remainder = 

[device "get-profile"]
vendor = openaps.vendors.process
extra = get-profile.ini

[report "nightscout/carb-history.json"]
oper = carb_history
use = shell
reporter = JSON
json_default = True
device = ns
remainder = 

[report "monitor/glucose-24h-merge.json"]
use = shell
short = monitor/glucose.json
reporter = JSON
json_default = True
long = nightscout/glucose-24h.json
device = merge
remainder = 

[device "determine-basal"]
vendor = openaps.vendors.process
extra = determine-basal.ini

[device "calculate-iob"]
vendor = openaps.vendors.process
extra = calculate-iob.ini

[device "detect-sensitivity"]
vendor = openaps.vendors.process
extra = detect-sensitivity.ini

[device "mm-format-ns-treatments"]
vendor = openaps.vendors.process
extra = mm-format-ns-treatments.ini

[report "nightscout/pump-history-formatted.json"]
use = shell
reporter = JSON
json_default = True
pumphistory = monitor/pump-history-zoned.json
device = mm-format-ns-treatments
model = monitor/model.json
remainder = 

[device "recent-rssi"]
vendor = openaps.vendors.process
extra = recent-rssi.ini

[report "monitor/recent-rssi.json"]
device = recent-rssi
remainder = 
use = shell
json_default = True
reporter = JSON

